// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VoltflowAPI.Contexts;

#nullable disable

namespace VoltflowAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250410131459_Application")]
    partial class Application
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VoltflowAPI.Models.Application.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("integer");

                    b.Property<int>("ChargingRate")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ServiceMode")
                        .HasColumnType("boolean");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("ChargingPorts");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("MaxChargeRate")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ChargingStations");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingStationOpeningHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<TimeSpan[]>("Friday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.PrimitiveCollection<TimeSpan[]>("Monday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.PrimitiveCollection<TimeSpan[]>("Saturday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<TimeSpan[]>("Sunday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.PrimitiveCollection<TimeSpan[]>("Thursday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.PrimitiveCollection<TimeSpan[]>("Tuesday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.PrimitiveCollection<TimeSpan[]>("Wednesday")
                        .IsRequired()
                        .HasColumnType("interval[]");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("ChargingStationOpeningHours");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingStationsServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ChargingStationServiceHistory");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CarId")
                        .HasColumnType("integer");

                    b.Property<int>("ChargingStationId")
                        .HasColumnType("integer");

                    b.Property<double>("Cost")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("EnergyConsumed")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingPort", b =>
                {
                    b.HasOne("VoltflowAPI.Models.Application.ChargingStation", "Station")
                        .WithMany("Ports")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingStationOpeningHours", b =>
                {
                    b.HasOne("VoltflowAPI.Models.Application.ChargingStation", "Station")
                        .WithMany("OpeningHours")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("VoltflowAPI.Models.Application.ChargingStation", b =>
                {
                    b.Navigation("OpeningHours");

                    b.Navigation("Ports");
                });
#pragma warning restore 612, 618
        }
    }
}
